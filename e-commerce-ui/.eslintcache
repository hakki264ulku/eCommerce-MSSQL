[{"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\index.js":"1","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\App.js":"2","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminPage.js":"3","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminNavBar.js":"4","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsPage.js":"5","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminCategoriesPage.js":"6","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminOrdersPage.js":"7","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsNavBar.js":"8","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\ViewAllProducts.js":"9","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AddProductPage.js":"10","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\sellerUtils.js":"11","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\firebase.js":"12","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\HomePage.js":"13","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\NavBar.js":"14","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\CategoriesPage.js":"15","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\Login.js":"16","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\AuthServices.js":"17","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\SignUp.js":"18","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\Cart.js":"19","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\UpdateProductPage.js":"20"},{"size":218,"mtime":1611306728505,"results":"21","hashOfConfig":"22"},{"size":1576,"mtime":1612102062066,"results":"23","hashOfConfig":"22"},{"size":260,"mtime":1611988006794,"results":"24","hashOfConfig":"22"},{"size":1682,"mtime":1612105715276,"results":"25","hashOfConfig":"22"},{"size":595,"mtime":1611689267109,"results":"26","hashOfConfig":"22"},{"size":4216,"mtime":1611942891819,"results":"27","hashOfConfig":"22"},{"size":308,"mtime":1611330989270,"results":"28","hashOfConfig":"22"},{"size":1597,"mtime":1611688391421,"results":"29","hashOfConfig":"22"},{"size":3480,"mtime":1612099678637,"results":"30","hashOfConfig":"22"},{"size":4119,"mtime":1612098349644,"results":"31","hashOfConfig":"22"},{"size":4041,"mtime":1612104885373,"results":"32","hashOfConfig":"22"},{"size":495,"mtime":1612005526898,"results":"33","hashOfConfig":"22"},{"size":4054,"mtime":1612086924075,"results":"34","hashOfConfig":"22"},{"size":2884,"mtime":1612034067943,"results":"35","hashOfConfig":"22"},{"size":3252,"mtime":1612087332290,"results":"36","hashOfConfig":"22"},{"size":2384,"mtime":1612015414683,"results":"37","hashOfConfig":"22"},{"size":1689,"mtime":1612019821244,"results":"38","hashOfConfig":"22"},{"size":4138,"mtime":1612034030803,"results":"39","hashOfConfig":"22"},{"size":4592,"mtime":1612105155441,"results":"40","hashOfConfig":"22"},{"size":5341,"mtime":1612102427849,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"bbtg0d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\index.js",[],["93","94"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\App.js",["95","96"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminPage.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminNavBar.js",["97","98"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsPage.js",["99","100","101"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction AdminProductsPage() {\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n    // RUNS When the page is first mounted\r\n    useEffect(()=>{\r\n\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <AdminNavBar />\r\n        <AdminProductsNavBar />\r\n        \r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\n\r\nexport default AdminProductsPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminCategoriesPage.js",["102","103","104"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport UUID from 'uuid-int'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react';\r\nimport { getCategories, handleImportImage, addCategory } from '../utils/sellerUtils'\r\n\r\nfunction AdminCategoriesPage() {\r\n  const history = useHistory()\r\n\r\n  const [CategoryName, setCategoryName] = useState(\"\")\r\n  const [CategoryDescription, setCategoryDescription] = useState(\"\")\r\n  const [imgURL, setImgURL] = useState(\"\")\r\n  //const [CategoryID, setCategoryID] = useState(\"\")\r\n  const [categories, setCategories] = useState([])\r\n\r\n  const getCats = async () => {\r\n    const data = await getCategories()\r\n    console.log(data.data)\r\n    setCategories(data.data)\r\n  }\r\n\r\n  // RUNS When the page is first mounted\r\n  useEffect(() => {\r\n    getCats()\r\n  }, [])\r\n\r\n  const handleAddCategory = async () => {\r\n    let CategoryID = UUID(3).uuid()\r\n    CategoryID = CategoryID % 100 + parseInt((Math.random() * 10000))\r\n\r\n    let returnData = await addCategory(CategoryID, CategoryName, CategoryDescription, imgURL)\r\n    if (returnData.data) {\r\n      alert(\"The Category has been added succesfully...\")\r\n      history.push(\"/admin/categories\")\r\n    }\r\n  }\r\n\r\n  const handleImage = async (e) => {\r\n    let url = await handleImportImage(e)\r\n    setImgURL(url)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n\r\n      <FormContainer>\r\n        <FormTitle>ADD CATEGORY</FormTitle>\r\n\r\n        <InputContainer>\r\n          <InputName>Category Name: </InputName>\r\n          <Input value={CategoryName} onChange={(e) => setCategoryName(e.target.value)} />\r\n        </InputContainer>\r\n\r\n        <InputContainer>\r\n          <InputName>Category Description: </InputName>\r\n          <Input value={CategoryDescription} onChange={(e) => setCategoryDescription(e.target.value)} />\r\n        </InputContainer>\r\n\r\n        <InputContainer>\r\n          <InputName>Add Image: </InputName>\r\n          <Input type=\"file\" onChange={(e) => handleImage(e)} />\r\n        </InputContainer>\r\n\r\n        <AddButton onClick={() => handleAddCategory()}>Add Category</AddButton>\r\n\r\n      </FormContainer>\r\n\r\n      <MainContainer>\r\n        <FormTitle>ALL CATEGORIES</FormTitle>\r\n\r\n        <ProductsTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableHeader>Image</TableHeader>\r\n              <TableHeader>CategoryID</TableHeader>\r\n              <TableHeader>Category Name</TableHeader>\r\n              <TableHeader>Category Description</TableHeader>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <ProductContainer>\r\n            {categories.map(c => (\r\n              <TableRow>\r\n                <TableData><IMG src={c.imgURL} /></TableData>\r\n                <TableData>{c.CategoryID}</TableData>\r\n                <TableData>{c.CategoryName}</TableData>\r\n                <TableData>{c.CategoryDescription}</TableData>\r\n              </TableRow>\r\n            ))}\r\n          </ProductContainer>\r\n        </ProductsTable>\r\n\r\n      </MainContainer>\r\n\r\n\r\n\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\nconst FormContainer = tw.div`flex flex-col p-4 bg-gray-200 rounded-lg shadow-2xl m-4 w-3/5`\r\nconst FormTitle = tw.h2`font-bold text-2xl text-center mt-3 mb-4`\r\nconst InputContainer = tw.span`flex p-1 mb-4`\r\nconst InputName = tw.h2`font-bold mt-1 w-32 sm:w-48`\r\nconst Input = tw.input`ml-2 border-2 rounded-lg p-2 w-5/6`\r\nconst TextArea = tw.textarea`ml-2 border-2 rounded-lg p-2 w-5/6 max-h-32`\r\n\r\nconst Select = tw.select`p-1 w-1/4`\r\nconst Option = tw.option``\r\n\r\nconst AddButton = tw.button`py-1 text-lg text-white bg-gray-800 font-bold rounded-lg border-none w-48\r\nhover:bg-gray-200 hover:text-gray-900 hover:cursor-pointer`\r\n\r\nconst MainContainer = tw.div`w-screen mt-16`\r\nconst ProductsTable = tw.table`w-screen table-auto text-center`\r\nconst TableHead = tw.thead`bg-gray-200`\r\nconst TableHeader = tw.th`font-bold text-yellow-200 text-xl bg-gray-400 p-2`\r\nconst TableRow = tw.tr`bg-gray-100`\r\nconst TableData = tw.td`text-base items-start align-middle`\r\nconst IMG = tw.img`w-16 h-auto rounded-xl`\r\nconst ProductContainer = tw.tbody``\r\n\r\nexport default AdminCategoriesPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminOrdersPage.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsNavBar.js",["105","106"],"import '../App.css';\r\nimport { useEffect, useState } from \"react\"\r\nimport tw from \"twin.macro\"\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction AdminProductsNavBar() {\r\n\r\n    ///const [bol, setBol] = useState(0) // if one static, if two adaptive\r\n    let path = window.location.pathname.split('/')\r\n    let bol = 0\r\n\r\n\r\n    if (path[path.length - 1] === 'viewAll') bol = 1\r\n    if (path[path.length - 1] === 'addProduct') bol = 2\r\n\r\n\r\n    return (\r\n        <NavContainer>\r\n            <NavButtonsContainer>\r\n                <Link to=\"/admin/products/viewAll\">\r\n                    {bol !== 1 && <NavButton>View All Products</NavButton>}\r\n                    {bol === 1 && <ClickedButton>View All Products</ClickedButton>}\r\n                </Link>\r\n\r\n                <Link to=\"/admin/products/addProduct\">\r\n                    {bol !== 2 && <NavButton>Add Product</NavButton>}\r\n                    {bol === 2 && <ClickedButton>Add Product</ClickedButton>}\r\n                </Link>\r\n\r\n            </NavButtonsContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\nconst NavContainer = tw.div`w-screen justify-center font-sans bg-gray-900 py-3`\r\nconst NavButtonsContainer = tw.div` flex`\r\nconst NavButton = tw.button`py-1 px-2 ml-3 font-bold text-white border-none bg-gray-900 hover:bg-gray-700 rounded-lg hover:cursor-pointer\r\nfocus:outline-none hover:shadow-xl`\r\n\r\nconst ClickedButton = tw.button`py-1 px-2 ml-3 font-bold text-gray-900 border-none bg-gray-300 rounded-lg hover:cursor-pointer\r\nfocus:outline-none shadow-2xl`\r\n\r\n\r\nexport default AdminProductsNavBar;","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\ViewAllProducts.js",["107","108"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react';\r\nimport { getProducts, deleteProduct } from '../utils/sellerUtils'\r\n\r\n\r\nfunction ViewAllProducts() {\r\n  const history = useHistory()\r\n  let path = window.location.pathname.split('/')\r\n\r\n  const [products, setProducts] = useState([])\r\n\r\n  const getPrs = async () => {\r\n    const data = await getProducts()\r\n\r\n    // assign the array of products\r\n    setProducts(data.data)\r\n  }\r\n\r\n\r\n  // GET ALL Products when the page is first mounted\r\n  useEffect(() => {\r\n    getPrs()\r\n  }, [])\r\n\r\n  const handleDelete = async (productid) => {\r\n    console.log()\r\n    let newProducts = [...products]\r\n    newProducts = newProducts.filter((o) => {\r\n      if (productid === o.ProductID) return false\r\n      return true\r\n    })\r\n\r\n    setProducts(newProducts)\r\n\r\n    await deleteProduct(productid)\r\n  }\r\n\r\n  const handleUpdate = async (productid) => {\r\n    history.push(`/admin/products/update/${productid}`)\r\n  } \r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n      <AdminProductsNavBar />\r\n\r\n      <MainContainer>\r\n\r\n        <ProductsTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableHeader>Image</TableHeader>\r\n              <TableHeader>ProductID</TableHeader>\r\n              <TableHeader>Product Name</TableHeader>\r\n              <TableHeader>Product Description</TableHeader>\r\n              <TableHeader>CategoryID</TableHeader>\r\n              <TableHeader>Price</TableHeader>\r\n              <TableHeader>Stock</TableHeader>\r\n              <TableHeader>Delete</TableHeader>\r\n              <TableHeader>Edit</TableHeader>\r\n            </TableRow>\r\n          </TableHead>\r\n          <ProductContainer>\r\n            {products.map(p => (\r\n              <TableRow>\r\n                <TableData><IMG src={p.imgURL} /></TableData>\r\n                <TableData>{p.ProductID}</TableData>\r\n                <TableData>{p.ProductName}</TableData>\r\n                <TableData>{p.ProductDescript}</TableData>\r\n                <TableData>{p.CategoryID}</TableData>\r\n                <TableData>{p.price}$</TableData>\r\n                <TableData>{p.stock}</TableData>\r\n                <TableData><DelButton onClick={() => handleDelete(p.ProductID)} >X</DelButton></TableData>\r\n                <TableData><EditButton onClick={() => handleUpdate(p.ProductID)} >...</EditButton></TableData>\r\n              </TableRow>\r\n            ))}\r\n          </ProductContainer>\r\n        </ProductsTable>\r\n\r\n      </MainContainer>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\n\r\nconst MainContainer = tw.div`w-screen`\r\nconst ProductsTable = tw.table`w-screen table-auto text-center`\r\nconst TableHead = tw.thead`bg-gray-200`\r\nconst TableHeader = tw.th`font-bold text-yellow-200 text-xl bg-gray-400 p-2`\r\nconst TableRow = tw.tr`bg-gray-100`\r\nconst TableData = tw.td`text-base items-start align-middle`\r\nconst IMG = tw.img`w-16 h-auto rounded-xl`\r\nconst ProductContainer = tw.tbody``\r\n\r\nconst DelButton = tw.button`p-2 font-bold border-none focus:outline-none bg-red-500 rounded-lg\r\nhover:cursor-pointer hover:bg-red-600`\r\nconst EditButton = tw.button`p-2 font-bold border-none focus:outline-none bg-green-500 rounded-lg\r\nhover:cursor-pointer hover:bg-green-600`\r\n\r\nexport default ViewAllProducts;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AddProductPage.js",["109","110","111"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport UUID from 'uuid-int'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useEffect, useState } from 'react';\r\nimport { getCategories, addProduct, handleImportImage } from '../utils/sellerUtils'\r\n\r\nfunction AddProductPage() {\r\n  const history = useHistory()\r\n\r\n  const [Productid, setProductid] = useState(-1)\r\n  const [Categoryid, setCategoryid] = useState(-1)\r\n  const [ProductName, setProductName] = useState(\"\")\r\n  const [ProductDesc, setProductDesc] = useState(\"\")\r\n  const [imgURL, setImgURL] = useState(\"\")\r\n  const [price, setPrice] = useState(-1)\r\n  const [stock, setStock] = useState(-1)\r\n  const [categories, setCategories] = useState([])\r\n\r\n\r\n\r\n\r\n  const getCats = async () => {\r\n    const data = await getCategories()\r\n    console.log(data.data)\r\n    setCategories(data.data)\r\n  }\r\n\r\n  // RUNS When the page is first mounted\r\n  useEffect(() => {\r\n    getCats()\r\n  }, [])\r\n\r\n  const handleImage = async (e) => {\r\n\r\n    let url = await handleImportImage(e)\r\n    setImgURL(url)\r\n  }\r\n\r\n  const handleAddProduct = async () => {\r\n    let ProductID = UUID(3).uuid()\r\n    //let ProductID = ui.uuid() //uuidv4()\r\n    ProductID = ProductID % 100 + parseInt((Math.random() * 10000))\r\n    console.log(ProductID)\r\n\r\n    let CategoryID = parseInt(Categoryid)\r\n    let returnData = await addProduct(ProductID, CategoryID, ProductName, ProductDesc, imgURL, price, stock)\r\n    if (returnData.data) {\r\n      alert(\"The product has been added succesfully...\")\r\n      history.push(\"/admin/products/viewAll\")\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n      <AdminProductsNavBar />\r\n\r\n      <MainContainer>\r\n        <FormContainer>\r\n          <InputContainer>\r\n            <InputName>Product Name: </InputName>\r\n            <Input value={ProductName} onChange={(e) => setProductName(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Product Description: </InputName>\r\n            <TextArea value={ProductDesc} onChange={(e) => setProductDesc(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Price: </InputName>\r\n            <Input type=\"number\" value={price} onChange={e => setPrice(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Stock: </InputName>\r\n            <Input value={stock} onChange={e => setStock(e.target.value)} type=\"number\" />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Category & CategoryID: </InputName>\r\n            <Select onChange={e => setCategoryid(e.target.value.split('.')[1])}>\r\n            <Option>{`Choose the category otherwise, there'll be error`}</Option>\r\n              {categories.map(c => (\r\n                <Option key={c.CategoryID} id={c.CategoryID}>{`${c.CategoryName}.${c.CategoryID}`}</Option>\r\n              ))}\r\n            </Select>\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n          <InputName>Add Image: </InputName>\r\n            <Input type=\"file\" onChange={(e) => handleImage(e)} />\r\n          </InputContainer>\r\n\r\n          <AddButton onClick={() => handleAddProduct()}>Add Product</AddButton>\r\n\r\n\r\n\r\n\r\n        </FormContainer>\r\n      </MainContainer>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div``\r\nconst MainContainer = tw.div``\r\nconst FormContainer = tw.div`flex flex-col p-4 bg-gray-200 rounded-lg shadow-2xl m-4 w-3/5`\r\nconst InputContainer = tw.span`flex p-1 mb-4`\r\nconst InputName = tw.h2`font-bold mt-1 w-32 sm:w-48`\r\nconst Input = tw.input`ml-2 border-2 rounded-lg p-2 w-5/6`\r\nconst TextArea = tw.textarea`ml-2 border-2 rounded-lg p-2 w-5/6 max-h-32`\r\n\r\nconst Select = tw.select`p-1 w-1/4`\r\nconst Option = tw.option``\r\n\r\nconst AddButton = tw.button`py-1 text-lg text-white bg-gray-800 font-bold rounded-lg border-none w-32\r\nhover:bg-gray-200 hover:text-gray-900 hover:cursor-pointer`\r\n\r\nexport default AddProductPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\sellerUtils.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\firebase.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\HomePage.js",["112","113","114"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport NavBar from './NavBar'\r\nimport UUID from 'uuid-int'\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport firebase from '../utils/firebase'\r\n\r\nimport { getProducts, getCategories, addOrder, getCustomerID } from '../utils/sellerUtils'\r\n\r\nfunction HomePage(props) {\r\n    const history = useHistory()\r\n    let path = window.location.pathname.split('/')\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n    const [category, setCategory] = useState(\"\")\r\n    const [boolean, setBoolean] = useState(false)\r\n\r\n    const getProds = async () => {\r\n        const data = await getProducts()\r\n        console.log(data.data)\r\n        setProducts(data.data)\r\n    }\r\n\r\n    const getCats = async () => {\r\n        const data = await getCategories()\r\n        setCategories(data.data)\r\n        return data.data\r\n    }\r\n\r\n    // RUNS When the page is first mounted\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setBoolean(true)\r\n            } else setBoolean(false)\r\n        });\r\n\r\n        getProds()\r\n        getCats()\r\n    }, [])\r\n\r\n    const handleChangeSelect = async (value) => {\r\n        history.push(`/categories/${value.split(\".\")[1]}`)\r\n    }\r\n\r\n    const handleOrder = async (productID, ProductName, imgURL, price) => {\r\n        let OrderID = UUID(3).uuid()\r\n        OrderID = OrderID % 100 + parseInt((Math.random() * 10000))\r\n        let { ID } = await getCustomerID()\r\n        //console.log(ID)\r\n        await addOrder(OrderID, productID, ID, 1, 0, 0, ProductName, imgURL, price)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <NavBar />\r\n            <SelectContainer>\r\n                <SelectTitle>Choose Category To List Products</SelectTitle>\r\n                <Select onChange={(e) => handleChangeSelect(e.target.value)} >\r\n                    <Option>{`Categories`}</Option>\r\n                    {categories.map(c => (\r\n                        <Option key={c.CategoryID}>{`${c.CategoryName}.${c.CategoryID}`}</Option>\r\n                    ))}\r\n                </Select>\r\n            </SelectContainer>\r\n\r\n            <ProductsContainer>\r\n\r\n                {products.map(p => (\r\n                    <ProductCardContainer key={p.ProductID}>\r\n                        <ProductIMG src={p.imgURL} />\r\n                        <ProductName>{p.ProductName}</ProductName>\r\n                        <ProductDesc>{p.ProductDescript}</ProductDesc>\r\n                        <ProductPrice>${p.price}</ProductPrice>\r\n\r\n                        <ButtonContainer>\r\n                            {boolean && <ProductButton onClick={() => handleOrder(p.ProductID, p.ProductName, p.imgURL, p.price)}>ORDER</ProductButton>}\r\n                            {!boolean && <ProductButton onClick={()=>alert(\"In order to order please Login/Sign UP\")} >ORDER</ProductButton>}\r\n                        </ButtonContainer>\r\n                    </ProductCardContainer>\r\n                ))}\r\n\r\n            </ProductsContainer>\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = tw.div`font-sans w-screen ml-auto mr-auto`\r\nconst ProductsContainer = tw.div`flex flex-wrap justify-center`\r\n\r\nconst ProductCardContainer = tw.div`p-4 flex flex-col w-1/4 rounded-lg shadow-lg`\r\nconst ProductIMG = tw.img`w-1/2 rounded-lg ml-auto mr-auto`\r\nconst ProductName = tw.h2`text-center text-xl font-bold mt-3`\r\nconst ProductDesc = tw.h2`text-center mt-3`\r\nconst ProductPrice = tw.h2`font-bold text-lg mt-3 text-center`\r\n\r\nconst ButtonContainer = tw.div`flex items-stretch h-1/2`\r\nconst ProductButton = tw.button`font-bold text-lg py-1 rounded bg-indigo-400 border-blue-500 w-1/3 mr-auto ml-auto mt-2\r\nhover:cursor-pointer focus:outline-none self-end`\r\n\r\nconst SelectContainer = tw.div`p-4`\r\nconst SelectTitle = tw.h2`text-xl font-bold mt-2 mb-4 ml-1`\r\nconst Select = tw.select`p-1 w-1/4 mb-4`\r\nconst Option = tw.option``\r\n\r\nexport default HomePage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\NavBar.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\CategoriesPage.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport NavBar from './NavBar'\r\nimport UUID from 'uuid-int'\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport firebase from '../utils/firebase'\r\n\r\nimport { getProducts, getCategories, getProductsByCategory, addOrder, getCustomerID } from '../utils/sellerUtils'\r\n\r\n\r\nfunction CategoriesPage(props) {\r\n    let path = window.location.pathname.split('/')\r\n    const history = useHistory()\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n    const [category, setCategory] = useState(\"\")\r\n    const [boolean, setBoolean] = useState(false)\r\n\r\n    const getProds = async () => {\r\n        console.log(\"path \", parseInt(path[2]))\r\n        const data = await getProductsByCategory(parseInt(path[2]))\r\n        setProducts(data.data)\r\n    }\r\n\r\n    // RUNS When the page is first mounted\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setBoolean(true)\r\n            } else setBoolean(false)\r\n        });\r\n        getProds()\r\n    }, [])\r\n\r\n    const handleOrder = async (productID, ProductName, imgURL, price) => {\r\n        let OrderID = UUID(3).uuid()\r\n        OrderID = OrderID % 100 + parseInt((Math.random() * 10000))\r\n        let { ID } = await getCustomerID()\r\n        //console.log(ID)\r\n        await addOrder(OrderID, productID, ID, 1, 0, 0, ProductName, imgURL, price)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <NavBar />\r\n            <ProductsContainer>\r\n\r\n                {products.map(p => (\r\n                    <ProductCardContainer key={p.ProductID}>\r\n                        <ProductIMG src={p.imgURL} />\r\n                        <ProductName>{p.ProductName}</ProductName>\r\n                        <ProductDesc>{p.ProductDescript}</ProductDesc>\r\n                        <ProductPrice>{p.price}$</ProductPrice>\r\n                        {boolean && <ProductButton onClick={() => handleOrder(p.ProductID, p.ProductName, p.imgURL, p.price)}>ORDER</ProductButton>}\r\n                        {!boolean && <ProductButton onClick={() => alert(\"In order to order please Login/Sign UP\")} >ORDER</ProductButton>}\r\n                    </ProductCardContainer>\r\n                ))}\r\n\r\n            </ProductsContainer>\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = tw.div`font-sans w-screen ml-auto mr-auto`\r\nconst ProductsContainer = tw.div`flex flex-wrap justify-center border-solid border-t-2 border-gray-300`\r\nconst ProductCardContainer = tw.div`p-4 flex flex-col w-1/4 rounded-lg shadow-lg`\r\nconst ProductIMG = tw.img`w-1/2 rounded-lg ml-auto mr-auto`\r\nconst ProductName = tw.h2`text-center text-xl font-bold mt-3`\r\nconst ProductDesc = tw.h2`text-center mt-3`\r\nconst ProductPrice = tw.h2`font-bold text-lg mt-3 text-center`\r\nconst ProductButton = tw.button`font-bold text-lg py-1 rounded bg-indigo-400 border-blue-500 w-1/3 mr-auto ml-auto mt-2\r\nhover:cursor-pointer focus:outline-none`\r\n\r\n\r\nconst SelectContainer = tw.div`p-4`\r\nconst SelectTitle = tw.h2`text-xl font-bold mt-2 mb-4 ml-1`\r\nconst Select = tw.select`p-1 w-1/4 mb-4`\r\nconst Option = tw.option``\r\n\r\n\r\nexport default CategoriesPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\Login.js",["127"],"import React, { useState, useEffect } from 'react'\r\nimport tw from 'twin.macro'\r\nimport 'twin.macro'\r\nimport firebase from '../utils/firebase'\r\nimport NavBar from './NavBar'\r\n\r\nimport {login} from '../utils/AuthServices'\r\n\r\nfunction Login(props) {\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if(user) {\r\n                props.history.push('/')\r\n            } else return\r\n        });\r\n    }, [])\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!email || !password){\r\n            alert('Password or email cannot be empty!')\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n\r\n        try {\r\n            await login(email, password)\r\n            setIsLoading(false)\r\n            props.history.push('/')\r\n        } catch (e) {\r\n            alert(e.message)\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <NavBar />\r\n            <FormContainer>\r\n                <Form onSubmit={async (e) => await submitHandler(e)}>\r\n                    <Label>Email</Label>\r\n                    <Input type='email' placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Label>Password</Label>\r\n                    <Input type='password' placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    {!isLoading && <Button>Login</Button>}\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = tw.div`w-screen h-screen bg-gray-200 font-sans`\r\n\r\nconst FormContainer = tw.div`w-screen justify-center items-center flex mt-8 sm:mt-12`\r\nconst Form = tw.form`flex flex-col justify-center items-center bg-white shadow-lg rounded-md p-4 sm:p-8 w-4/5 sm:w-1/4`\r\nconst Label = tw.label`font-bold text-gray-900 text-lg mb-2`\r\nconst Button = tw.button`p-2 sm:px-4 sm:py-3 font-bold text-white text-lg bg-indigo-400 hover:bg-indigo-500 hover:cursor-pointer border-none rounded-lg`\r\nconst Input = tw.input`shadow appearance-none border rounded w-full py-2 px-3 text-xs sm:text-lg text-gray-700 leading-tight mb-4 focus:outline-none`\r\n\r\nexport default Login;","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\AuthServices.js",["128"],"import firebase from './firebase'\r\nimport {addNewCustomer} from './sellerUtils'\r\n\r\n\r\n//import {getUserId} from './UserServices'\r\n\r\nconst auth = firebase.auth()\r\nconst db = firebase.firestore()\r\n\r\nconst checkUserIsSignedIn = () => {\r\n    return firebase.auth().onAuthStateChanged(function (user) {\r\n        // check whether user is signed in or not\r\n        return !user ? false : true\r\n    });\r\n}\r\n\r\nconst getUserId = async () => {\r\n    return await new Promise((resolve, reject) => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (!user) {\r\n                reject('please authenticate first')\r\n            } else {\r\n                resolve(user.uid)\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\n// Register a user and save it also to firestore\r\nconst signUp = async (CustomerID, FullName, CustomerEmail, CustomerPassword, CustomerAddress, CustomerPhone) => {\r\n    try {\r\n        await auth.createUserWithEmailAndPassword(CustomerEmail, CustomerPassword)\r\n        const CustomerUID = await getUserId()\r\n\r\n        // ADD NEW CUSTOMER TO THE MSSQL\r\n        await addNewCustomer(CustomerID, FullName, CustomerEmail, CustomerPassword, CustomerAddress, CustomerPhone, CustomerUID)\r\n\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nconst login = async (email, password) => {\r\n    try {\r\n        return await auth.signInWithEmailAndPassword(email, password)\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    try {\r\n        return await auth.signOut()\r\n    } catch (e) {\r\n        throw new Error(e.message)\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    checkUserIsSignedIn,\r\n    signUp,\r\n    login,\r\n    logout\r\n}","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\SignUp.js",["129","130","131"],"import React, { useEffect, useState } from 'react'\r\nimport tw from 'twin.macro'\r\nimport 'twin.macro'\r\nimport UUID from 'uuid-int'\r\n\r\nimport NavBar from './NavBar'\r\nimport { signUp } from '../utils/AuthServices'\r\nimport firebase from '../utils/firebase'\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                props.history.push('/')\r\n            } else return\r\n        });\r\n    }, [])\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const handleSubmit = async (e) => {\r\n        let CustomerID = UUID(3).uuid()\r\n        //let ProductID = ui.uuid() //uuidv4()\r\n        CustomerID = CustomerID % 100 + parseInt((Math.random() * 10000))\r\n\r\n\r\n\r\n        e.preventDefault()\r\n        if (password !== passwordConfirm) {\r\n            alert('Passwords do not match!')\r\n            return\r\n        }\r\n        if (!username) {\r\n            alert('Please enter your username')\r\n            return\r\n        }\r\n        if (!address) {\r\n            alert('Please enter your address')\r\n            return\r\n        }\r\n        if (!phoneNumber) {\r\n            alert('Please enter your phone number')\r\n            return\r\n        }\r\n\r\n        try {\r\n            //setIsLoading(true)\r\n            await signUp(CustomerID, username, email, password, address, phoneNumber)\r\n            //setIsLoading(false)\r\n\r\n\r\n\r\n            //props.history.push('/')\r\n            console.log(\"Auth is succesfull....\")\r\n        } catch (e) {\r\n            alert(e.message)\r\n        }\r\n    }\r\n    //CustomerID, FullName, CustomerEmail, CustomerPassword, CustomerAddress, CustomerPhone\r\n    return (\r\n        <Container>\r\n            <NavBar />\r\n            <FormContainer>\r\n                <Form onSubmit={async (e) => await handleSubmit(e)}>\r\n                    <Label>Email</Label>\r\n                    <Input type='email' placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Label>Password</Label>\r\n                    <Input type='password' placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <Label>Confirm Password</Label>\r\n                    <Input type='password' placeholder='confirm password' value={passwordConfirm} onChange={(e) => setPasswordConfirm(e.target.value)} />\r\n                    <Label>Customer Name</Label>\r\n                    <Input type='text' placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                    <Label>Customer Address</Label>\r\n                    <TextArea type='text' placeholder=\"Please enter your address\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                    <Label>Phone Number</Label>\r\n                    <Input type='text' placeholder='Phone Number' value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\r\n\r\n                    <Button>Sign Up</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = tw.div`w-screen h-screen bg-gray-200 font-sans`\r\n\r\nconst FormContainer = tw.div`w-screen justify-center items-center flex mt-8 sm:mt-12`\r\nconst Form = tw.form`flex flex-col justify-center items-center bg-white shadow-lg rounded-md p-4 sm:p-8 w-4/5 sm:w-1/4`\r\nconst Label = tw.label`font-bold text-gray-900 text-lg mb-2`\r\nconst Button = tw.button`p-2 sm:px-4 sm:py-3 font-bold text-white text-lg bg-indigo-400 hover:bg-indigo-500\r\nfocus:outline-none hover:cursor-pointer border-none rounded-lg mt-6`\r\nconst Input = tw.input`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight mb-4 focus:outline-none`\r\n\r\nconst TextArea = tw.textarea`border-2 rounded-lg p-2 w-full max-h-32`\r\n\r\n\r\nexport default SignUp;","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\Cart.js",["132","133","134"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\UpdateProductPage.js",["135","136","137","138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":12},{"ruleId":"144","severity":1,"message":"148","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":10},{"ruleId":"144","severity":1,"message":"149","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"150","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"144","severity":1,"message":"151","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"152","line":11,"column":12,"nodeType":"146","messageId":"147","endLine":11,"endColumn":20},{"ruleId":"144","severity":1,"message":"153","line":11,"column":22,"nodeType":"146","messageId":"147","endLine":11,"endColumn":33},{"ruleId":"144","severity":1,"message":"154","line":112,"column":7,"nodeType":"146","messageId":"147","endLine":112,"endColumn":15},{"ruleId":"144","severity":1,"message":"155","line":114,"column":7,"nodeType":"146","messageId":"147","endLine":114,"endColumn":13},{"ruleId":"144","severity":1,"message":"156","line":115,"column":7,"nodeType":"146","messageId":"147","endLine":115,"endColumn":13},{"ruleId":"144","severity":1,"message":"149","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"150","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"144","severity":1,"message":"151","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":13,"column":7,"nodeType":"146","messageId":"147","endLine":13,"endColumn":11},{"ruleId":"144","severity":1,"message":"151","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"158","line":14,"column":10,"nodeType":"146","messageId":"147","endLine":14,"endColumn":19},{"ruleId":"144","severity":1,"message":"159","line":14,"column":21,"nodeType":"146","messageId":"147","endLine":14,"endColumn":33},{"ruleId":"144","severity":1,"message":"157","line":13,"column":9,"nodeType":"146","messageId":"147","endLine":13,"endColumn":13},{"ruleId":"144","severity":1,"message":"160","line":17,"column":12,"nodeType":"146","messageId":"147","endLine":17,"endColumn":20},{"ruleId":"144","severity":1,"message":"161","line":17,"column":22,"nodeType":"146","messageId":"147","endLine":17,"endColumn":33},{"ruleId":"144","severity":1,"message":"162","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":21},{"ruleId":"144","severity":1,"message":"163","line":9,"column":23,"nodeType":"146","messageId":"147","endLine":9,"endColumn":36},{"ruleId":"144","severity":1,"message":"164","line":14,"column":11,"nodeType":"146","messageId":"147","endLine":14,"endColumn":18},{"ruleId":"144","severity":1,"message":"165","line":17,"column":12,"nodeType":"146","messageId":"147","endLine":17,"endColumn":22},{"ruleId":"144","severity":1,"message":"166","line":17,"column":24,"nodeType":"146","messageId":"147","endLine":17,"endColumn":37},{"ruleId":"144","severity":1,"message":"160","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":20},{"ruleId":"144","severity":1,"message":"161","line":18,"column":22,"nodeType":"146","messageId":"147","endLine":18,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":35,"column":8,"nodeType":"169","endLine":35,"endColumn":10,"suggestions":"170"},{"ruleId":"144","severity":1,"message":"171","line":79,"column":7,"nodeType":"146","messageId":"147","endLine":79,"endColumn":22},{"ruleId":"144","severity":1,"message":"172","line":80,"column":7,"nodeType":"146","messageId":"147","endLine":80,"endColumn":18},{"ruleId":"144","severity":1,"message":"155","line":81,"column":7,"nodeType":"146","messageId":"147","endLine":81,"endColumn":13},{"ruleId":"144","severity":1,"message":"156","line":82,"column":7,"nodeType":"146","messageId":"147","endLine":82,"endColumn":13},{"ruleId":"167","severity":1,"message":"173","line":17,"column":8,"nodeType":"169","endLine":17,"endColumn":10,"suggestions":"174"},{"ruleId":"144","severity":1,"message":"175","line":8,"column":7,"nodeType":"146","messageId":"147","endLine":8,"endColumn":9},{"ruleId":"167","severity":1,"message":"173","line":19,"column":8,"nodeType":"169","endLine":19,"endColumn":10,"suggestions":"176"},{"ruleId":"144","severity":1,"message":"177","line":27,"column":12,"nodeType":"146","messageId":"147","endLine":27,"endColumn":21},{"ruleId":"144","severity":1,"message":"178","line":27,"column":23,"nodeType":"146","messageId":"147","endLine":27,"endColumn":35},{"ruleId":"144","severity":1,"message":"179","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"180","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":20},{"ruleId":"167","severity":1,"message":"173","line":50,"column":8,"nodeType":"169","endLine":50,"endColumn":10,"suggestions":"181"},{"ruleId":"144","severity":1,"message":"151","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"179","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"182","line":9,"column":60,"nodeType":"146","messageId":"147","endLine":9,"endColumn":70},{"ruleId":"144","severity":1,"message":"183","line":24,"column":12,"nodeType":"146","messageId":"147","endLine":24,"endColumn":19},{"ruleId":"167","severity":1,"message":"184","line":53,"column":8,"nodeType":"169","endLine":53,"endColumn":10,"suggestions":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'tw' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'Select' is assigned a value but never used.","'Option' is assigned a value but never used.","'path' is assigned a value but never used.","'Productid' is assigned a value but never used.","'setProductid' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'getProducts' is defined but never used.","'getCategories' is defined but never used.","'history' is assigned a value but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProds'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'SelectContainer' is assigned a value but never used.","'SelectTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["189"],"'db' is assigned a value but never used.",["190"],"'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'UUID' is defined but never used.","'useHistory' is defined but never used.",["191"],"'addProduct' is defined but never used.","'product' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPr'. Either include it or remove the dependency array.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"195","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [getProds]",{"range":"201","text":"202"},"Update the dependencies array to be: [props.history]",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},"Update the dependencies array to be: [getPr]",{"range":"207","text":"208"},[1157,1159],"[getProds]",[448,450],"[props.history]",[484,486],[1352,1354],[1706,1708],"[getPr]"]