[{"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\index.js":"1","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\App.js":"2","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminPage.js":"3","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminNavBar.js":"4","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsPage.js":"5","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminCategoriesPage.js":"6","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminOrdersPage.js":"7","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsNavBar.js":"8","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\ViewAllProducts.js":"9","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AddProductPage.js":"10","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\sellerUtils.js":"11","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\firebase.js":"12","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\HomePage.js":"13","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\NavBar.js":"14","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\CategoriesPage.js":"15"},{"size":218,"mtime":1611306728505,"results":"16","hashOfConfig":"17"},{"size":1194,"mtime":1611997589616,"results":"18","hashOfConfig":"17"},{"size":260,"mtime":1611988006794,"results":"19","hashOfConfig":"17"},{"size":1890,"mtime":1611746678602,"results":"20","hashOfConfig":"17"},{"size":595,"mtime":1611689267109,"results":"21","hashOfConfig":"17"},{"size":4216,"mtime":1611942891819,"results":"22","hashOfConfig":"17"},{"size":308,"mtime":1611330989270,"results":"23","hashOfConfig":"17"},{"size":1597,"mtime":1611688391421,"results":"24","hashOfConfig":"17"},{"size":2324,"mtime":1611936598131,"results":"25","hashOfConfig":"17"},{"size":4074,"mtime":1611999005771,"results":"26","hashOfConfig":"17"},{"size":1496,"mtime":1612005759594,"results":"27","hashOfConfig":"17"},{"size":495,"mtime":1612005526898,"results":"28","hashOfConfig":"17"},{"size":3295,"mtime":1612001523147,"results":"29","hashOfConfig":"17"},{"size":1250,"mtime":1612000771285,"results":"30","hashOfConfig":"17"},{"size":2351,"mtime":1612000718130,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bbtg0d",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\index.js",[],["70","71"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\App.js",["72","73"],"import logo from './logo.svg';\nimport './App.css';\nimport tw from 'twin.macro'\nimport {\n  BrowserRouter,\n  Route\n} from 'react-router-dom'\n\nimport HomePage from './Pages/HomePage'\nimport AdminPage from './Pages/AdminPage'\nimport AdminProductsPage from './Pages/AdminProductsPage';\nimport ViewAllProducts from './Pages/ViewAllProducts'\nimport AddProductsPage from './Pages/AddProductPage'\nimport AdminCategoriesPage from './Pages/AdminCategoriesPage';\nimport AdminOrdersPage from './Pages/AdminOrdersPage';\nimport CategoriesPage from './Pages/CategoriesPage';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Route exact path='/' component={HomePage}/>\n    <Route path='/categories' component={CategoriesPage}/>\n    <Route exact path='/admin' component={AdminPage}/>\n    <Route exact path='/admin/products' component={AdminProductsPage}/>\n    <Route exact path='/admin/products/viewAll' component={ViewAllProducts}/>\n    <Route exact path='/admin/products/addProduct' component={AddProductsPage}/>\n    <Route exact path='/admin/orders' component={AdminOrdersPage}/>\n    <Route exact path='/admin/categories' component={AdminCategoriesPage}/>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminPage.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminNavBar.js",["74","75"],"import '../App.css';\r\nimport { useEffect, useState } from \"react\"\r\nimport tw from \"twin.macro\"\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction AdminNavBar() {\r\n\r\n    ///const [bol, setBol] = useState(0) // if one static, if two adaptive\r\n    let path = window.location.pathname.split('/')\r\n    let bol = 0\r\n\r\n\r\n    if (path[path.length - 1] === 'products') bol = 1\r\n    if (path[path.length - 2] === 'products') bol = 1\r\n    if (path[path.length - 1] === 'categories') bol = 2\r\n    if (path[path.length - 1] === 'orders') bol = 3\r\n\r\n\r\n    return (\r\n        <NavContainer>\r\n            <NavButtonsContainer>\r\n                <Link to=\"/admin/products/viewAll\">\r\n                    {bol !== 1 && <NavButton>Products</NavButton>}\r\n                    {bol === 1 && <ClickedButton>Products</ClickedButton>}\r\n                </Link>\r\n\r\n                <Link to=\"/admin/categories\">\r\n                    {bol !== 2 && <NavButton>Categories</NavButton>}\r\n                    {bol === 2 && <ClickedButton>Categories</ClickedButton>}\r\n                </Link>\r\n\r\n                <Link to=\"/admin/orders\">\r\n                    {bol !== 3 && <NavButton>Orders</NavButton>}\r\n                    {bol === 3 && <ClickedButton>Orders</ClickedButton>}\r\n                </Link>\r\n            </NavButtonsContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\nconst NavContainer = tw.div`w-screen justify-center font-sans bg-gray-900 py-4`\r\nconst NavButtonsContainer = tw.div` flex justify-around`\r\nconst NavButton = tw.button`py-2 px-4 font-bold text-white text-xl border-none bg-gray-900 hover:bg-gray-700 rounded-lg hover:cursor-pointer\r\nfocus:outline-none hover:shadow-xl`\r\n\r\nconst ClickedButton = tw.button`py-2 px-4 font-bold text-gray-900 text-xl border-none bg-gray-300 rounded-lg hover:cursor-pointer\r\nfocus:outline-none shadow-2xl`\r\n\r\n\r\nexport default AdminNavBar;","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsPage.js",["76","77","78"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction AdminProductsPage() {\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n    // RUNS When the page is first mounted\r\n    useEffect(()=>{\r\n\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <AdminNavBar />\r\n        <AdminProductsNavBar />\r\n        \r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\n\r\nexport default AdminProductsPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminCategoriesPage.js",["79","80","81"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport UUID from 'uuid-int'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react';\r\nimport { getCategories, handleImportImage, addCategory } from '../utils/sellerUtils'\r\n\r\nfunction AdminCategoriesPage() {\r\n  const history = useHistory()\r\n\r\n  const [CategoryName, setCategoryName] = useState(\"\")\r\n  const [CategoryDescription, setCategoryDescription] = useState(\"\")\r\n  const [imgURL, setImgURL] = useState(\"\")\r\n  //const [CategoryID, setCategoryID] = useState(\"\")\r\n  const [categories, setCategories] = useState([])\r\n\r\n  const getCats = async () => {\r\n    const data = await getCategories()\r\n    console.log(data.data)\r\n    setCategories(data.data)\r\n  }\r\n\r\n  // RUNS When the page is first mounted\r\n  useEffect(() => {\r\n    getCats()\r\n  }, [])\r\n\r\n  const handleAddCategory = async () => {\r\n    let CategoryID = UUID(3).uuid()\r\n    CategoryID = CategoryID % 100 + parseInt((Math.random() * 10000))\r\n\r\n    let returnData = await addCategory(CategoryID, CategoryName, CategoryDescription, imgURL)\r\n    if (returnData.data) {\r\n      alert(\"The Category has been added succesfully...\")\r\n      history.push(\"/admin/categories\")\r\n    }\r\n  }\r\n\r\n  const handleImage = async (e) => {\r\n    let url = await handleImportImage(e)\r\n    setImgURL(url)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n\r\n      <FormContainer>\r\n        <FormTitle>ADD CATEGORY</FormTitle>\r\n\r\n        <InputContainer>\r\n          <InputName>Category Name: </InputName>\r\n          <Input value={CategoryName} onChange={(e) => setCategoryName(e.target.value)} />\r\n        </InputContainer>\r\n\r\n        <InputContainer>\r\n          <InputName>Category Description: </InputName>\r\n          <Input value={CategoryDescription} onChange={(e) => setCategoryDescription(e.target.value)} />\r\n        </InputContainer>\r\n\r\n        <InputContainer>\r\n          <InputName>Add Image: </InputName>\r\n          <Input type=\"file\" onChange={(e) => handleImage(e)} />\r\n        </InputContainer>\r\n\r\n        <AddButton onClick={() => handleAddCategory()}>Add Category</AddButton>\r\n\r\n      </FormContainer>\r\n\r\n      <MainContainer>\r\n        <FormTitle>ALL CATEGORIES</FormTitle>\r\n\r\n        <ProductsTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableHeader>Image</TableHeader>\r\n              <TableHeader>CategoryID</TableHeader>\r\n              <TableHeader>Category Name</TableHeader>\r\n              <TableHeader>Category Description</TableHeader>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <ProductContainer>\r\n            {categories.map(c => (\r\n              <TableRow>\r\n                <TableData><IMG src={c.imgURL} /></TableData>\r\n                <TableData>{c.CategoryID}</TableData>\r\n                <TableData>{c.CategoryName}</TableData>\r\n                <TableData>{c.CategoryDescription}</TableData>\r\n              </TableRow>\r\n            ))}\r\n          </ProductContainer>\r\n        </ProductsTable>\r\n\r\n      </MainContainer>\r\n\r\n\r\n\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\nconst FormContainer = tw.div`flex flex-col p-4 bg-gray-200 rounded-lg shadow-2xl m-4 w-3/5`\r\nconst FormTitle = tw.h2`font-bold text-2xl text-center mt-3 mb-4`\r\nconst InputContainer = tw.span`flex p-1 mb-4`\r\nconst InputName = tw.h2`font-bold mt-1 w-32 sm:w-48`\r\nconst Input = tw.input`ml-2 border-2 rounded-lg p-2 w-5/6`\r\nconst TextArea = tw.textarea`ml-2 border-2 rounded-lg p-2 w-5/6 max-h-32`\r\n\r\nconst Select = tw.select`p-1 w-1/4`\r\nconst Option = tw.option``\r\n\r\nconst AddButton = tw.button`py-1 text-lg text-white bg-gray-800 font-bold rounded-lg border-none w-48\r\nhover:bg-gray-200 hover:text-gray-900 hover:cursor-pointer`\r\n\r\nconst MainContainer = tw.div`w-screen mt-16`\r\nconst ProductsTable = tw.table`w-screen table-auto text-center`\r\nconst TableHead = tw.thead`bg-gray-200`\r\nconst TableHeader = tw.th`font-bold text-yellow-200 text-xl bg-gray-400 p-2`\r\nconst TableRow = tw.tr`bg-gray-100`\r\nconst TableData = tw.td`text-base items-start align-middle`\r\nconst IMG = tw.img`w-16 h-auto rounded-xl`\r\nconst ProductContainer = tw.tbody``\r\n\r\nexport default AdminCategoriesPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminOrdersPage.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AdminProductsNavBar.js",["82","83"],"import '../App.css';\r\nimport { useEffect, useState } from \"react\"\r\nimport tw from \"twin.macro\"\r\nimport React from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction AdminProductsNavBar() {\r\n\r\n    ///const [bol, setBol] = useState(0) // if one static, if two adaptive\r\n    let path = window.location.pathname.split('/')\r\n    let bol = 0\r\n\r\n\r\n    if (path[path.length - 1] === 'viewAll') bol = 1\r\n    if (path[path.length - 1] === 'addProduct') bol = 2\r\n\r\n\r\n    return (\r\n        <NavContainer>\r\n            <NavButtonsContainer>\r\n                <Link to=\"/admin/products/viewAll\">\r\n                    {bol !== 1 && <NavButton>View All Products</NavButton>}\r\n                    {bol === 1 && <ClickedButton>View All Products</ClickedButton>}\r\n                </Link>\r\n\r\n                <Link to=\"/admin/products/addProduct\">\r\n                    {bol !== 2 && <NavButton>Add Product</NavButton>}\r\n                    {bol === 2 && <ClickedButton>Add Product</ClickedButton>}\r\n                </Link>\r\n\r\n            </NavButtonsContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\nconst NavContainer = tw.div`w-screen justify-center font-sans bg-gray-900 py-3`\r\nconst NavButtonsContainer = tw.div` flex`\r\nconst NavButton = tw.button`py-1 px-2 ml-3 font-bold text-white border-none bg-gray-900 hover:bg-gray-700 rounded-lg hover:cursor-pointer\r\nfocus:outline-none hover:shadow-xl`\r\n\r\nconst ClickedButton = tw.button`py-1 px-2 ml-3 font-bold text-gray-900 border-none bg-gray-300 rounded-lg hover:cursor-pointer\r\nfocus:outline-none shadow-2xl`\r\n\r\n\r\nexport default AdminProductsNavBar;","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\ViewAllProducts.js",["84"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useEffect, useState } from 'react';\r\nimport { getProducts } from '../utils/sellerUtils'\r\n\r\n\r\nfunction ViewAllProducts() {\r\n\r\n  const [products, setProducts] = useState([])\r\n\r\n  const getPrs = async () => {\r\n    const data = await getProducts()\r\n\r\n    // assign the array of products\r\n    setProducts(data.data)\r\n  }\r\n\r\n\r\n  // GET ALL Products when the page is first mounted\r\n  useEffect(() => {\r\n    getPrs()\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n      <AdminProductsNavBar />\r\n\r\n      <MainContainer>\r\n\r\n        <ProductsTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableHeader>Image</TableHeader>\r\n              <TableHeader>ProductID</TableHeader>\r\n              <TableHeader>Product Name</TableHeader>\r\n              <TableHeader>Product Description</TableHeader>\r\n              <TableHeader>CategoryID</TableHeader>\r\n              <TableHeader>Price</TableHeader>\r\n              <TableHeader>Stock</TableHeader>\r\n            </TableRow>\r\n          </TableHead>\r\n          <ProductContainer>\r\n            {products.map(p => (\r\n              <TableRow>\r\n                <TableData><IMG src={p.imgURL} /></TableData>\r\n                <TableData>{p.ProductID}</TableData>\r\n                <TableData>{p.ProductName}</TableData>\r\n                <TableData>{p.ProductDescript}</TableData>\r\n                <TableData>{p.CategoryID}</TableData>\r\n                <TableData>{p.price}$</TableData>\r\n                <TableData>{p.stock}</TableData>\r\n              </TableRow>\r\n            ))}\r\n          </ProductContainer>\r\n        </ProductsTable>\r\n\r\n      </MainContainer>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div`font-sans`\r\n\r\nconst MainContainer = tw.div`w-screen`\r\nconst ProductsTable = tw.table`w-screen table-auto text-center`\r\nconst TableHead = tw.thead`bg-gray-200`\r\nconst TableHeader = tw.th`font-bold text-yellow-200 text-xl bg-gray-400 p-2`\r\nconst TableRow = tw.tr`bg-gray-100`\r\nconst TableData = tw.td`text-base items-start align-middle`\r\nconst IMG = tw.img`w-16 h-auto rounded-xl`\r\nconst ProductContainer = tw.tbody``\r\n\r\nexport default ViewAllProducts;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\AddProductPage.js",["85","86","87","88"],"import '../App.css';\r\nimport tw from 'twin.macro'\r\nimport Axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport UUID from 'uuid-int'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport AdminProductsNavBar from './AdminProductsNavBar'\r\nimport { useEffect, useState } from 'react';\r\nimport { getCategories, addProduct, handleImportImage } from '../utils/sellerUtils'\r\n\r\nfunction AddProductPage() {\r\n  const history = useHistory()\r\n\r\n  const [Productid, setProductid] = useState(-1)\r\n  const [Categoryid, setCategoryid] = useState(-1)\r\n  const [ProductName, setProductName] = useState(\"\")\r\n  const [ProductDesc, setProductDesc] = useState(\"\")\r\n  const [imgURL, setImgURL] = useState(\"\")\r\n  const [price, setPrice] = useState(-1)\r\n  const [stock, setStock] = useState(-1)\r\n  const [categories, setCategories] = useState([])\r\n\r\n\r\n\r\n\r\n  const getCats = async () => {\r\n    const data = await getCategories()\r\n    console.log(data.data)\r\n    setCategories(data.data)\r\n  }\r\n\r\n  // RUNS When the page is first mounted\r\n  useEffect(() => {\r\n    getCats()\r\n  }, [])\r\n\r\n  const handleImage = async (e) => {\r\n\r\n    let url = await handleImportImage(e)\r\n    setImgURL(url)\r\n  }\r\n\r\n  const handleAddProduct = async () => {\r\n    let ProductID = UUID(3).uuid()\r\n    //let ProductID = ui.uuid() //uuidv4()\r\n    ProductID = ProductID % 100 + parseInt((Math.random() * 10000))\r\n    console.log(ProductID)\r\n\r\n    let CategoryID = parseInt(Categoryid)\r\n    let returnData = await addProduct(ProductID, CategoryID, ProductName, ProductDesc, imgURL, price, stock)\r\n    if (returnData.data) {\r\n      alert(\"The product has been added succesfully...\")\r\n      history.push(\"/admin/products/viewAll\")\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AdminNavBar />\r\n      <AdminProductsNavBar />\r\n\r\n      <MainContainer>\r\n        <FormContainer>\r\n          <InputContainer>\r\n            <InputName>Product Name: </InputName>\r\n            <Input value={ProductName} onChange={(e) => setProductName(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Product Description: </InputName>\r\n            <TextArea value={ProductDesc} onChange={(e) => setProductDesc(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Price: </InputName>\r\n            <Input type=\"number\" value={price} onChange={e => setPrice(e.target.value)} />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Stock: </InputName>\r\n            <Input value={stock} onChange={e => setStock(e.target.value)} type=\"number\" />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <InputName>Category & CategoryID: </InputName>\r\n            <Select onChange={e => setCategoryid(e.target.value.split('.')[1])}>\r\n              {categories.map(c => (\r\n                <Option key={c.CategoryID} id={c.CategoryID}>{`${c.CategoryName}.${c.CategoryID}`}</Option>\r\n              ))}\r\n            </Select>\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n          <InputName>Add Image: </InputName>\r\n            <Input type=\"file\" onChange={(e) => handleImage(e)} />\r\n          </InputContainer>\r\n\r\n          <AddButton onClick={() => handleAddProduct()}>Add Product</AddButton>\r\n\r\n\r\n\r\n\r\n        </FormContainer>\r\n      </MainContainer>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = tw.div``\r\nconst MainContainer = tw.div``\r\nconst FormContainer = tw.div`flex flex-col p-4 bg-gray-200 rounded-lg shadow-2xl m-4 w-3/5`\r\nconst InputContainer = tw.span`flex p-1 mb-4`\r\nconst InputName = tw.h2`font-bold mt-1 w-32 sm:w-48`\r\nconst Input = tw.input`ml-2 border-2 rounded-lg p-2 w-5/6`\r\nconst TextArea = tw.textarea`ml-2 border-2 rounded-lg p-2 w-5/6 max-h-32`\r\n\r\nconst Select = tw.select`p-1 w-1/4`\r\nconst Option = tw.option``\r\n\r\nconst AddButton = tw.button`py-1 text-lg text-white bg-gray-800 font-bold rounded-lg border-none w-32\r\nhover:bg-gray-200 hover:text-gray-900 hover:cursor-pointer`\r\n\r\nexport default AddProductPage;\r\n","C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\sellerUtils.js",["89"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\utils\\firebase.js",[],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\HomePage.js",["90","91","92"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\NavBar.js",["93","94"],"C:\\Users\\hakki\\DB-FINAL-PROJECT\\e-commerce-ui\\src\\Pages\\CategoriesPage.js",["95","96","97","98","99","100","101","102","103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":12},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":10},{"ruleId":"111","severity":1,"message":"116","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":29},{"ruleId":"111","severity":1,"message":"118","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"111","severity":1,"message":"119","line":11,"column":12,"nodeType":"113","messageId":"114","endLine":11,"endColumn":20},{"ruleId":"111","severity":1,"message":"120","line":11,"column":22,"nodeType":"113","messageId":"114","endLine":11,"endColumn":33},{"ruleId":"111","severity":1,"message":"121","line":112,"column":7,"nodeType":"113","messageId":"114","endLine":112,"endColumn":15},{"ruleId":"111","severity":1,"message":"122","line":114,"column":7,"nodeType":"113","messageId":"114","endLine":114,"endColumn":13},{"ruleId":"111","severity":1,"message":"123","line":115,"column":7,"nodeType":"113","messageId":"114","endLine":115,"endColumn":13},{"ruleId":"111","severity":1,"message":"116","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":29},{"ruleId":"111","severity":1,"message":"118","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"111","severity":1,"message":"118","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"111","severity":1,"message":"124","line":4,"column":16,"nodeType":"113","messageId":"114","endLine":4,"endColumn":22},{"ruleId":"111","severity":1,"message":"125","line":15,"column":10,"nodeType":"113","messageId":"114","endLine":15,"endColumn":19},{"ruleId":"111","severity":1,"message":"126","line":15,"column":21,"nodeType":"113","messageId":"114","endLine":15,"endColumn":33},{"ruleId":"111","severity":1,"message":"127","line":38,"column":16,"nodeType":"113","messageId":"114","endLine":38,"endColumn":30},{"ruleId":"111","severity":1,"message":"128","line":11,"column":9,"nodeType":"113","messageId":"114","endLine":11,"endColumn":13},{"ruleId":"111","severity":1,"message":"129","line":15,"column":12,"nodeType":"113","messageId":"114","endLine":15,"endColumn":20},{"ruleId":"111","severity":1,"message":"130","line":15,"column":22,"nodeType":"113","messageId":"114","endLine":15,"endColumn":33},{"ruleId":"111","severity":1,"message":"116","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":29},{"ruleId":"111","severity":1,"message":"131","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":21},{"ruleId":"111","severity":1,"message":"132","line":7,"column":23,"nodeType":"113","messageId":"114","endLine":7,"endColumn":36},{"ruleId":"111","severity":1,"message":"133","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":18},{"ruleId":"111","severity":1,"message":"134","line":15,"column":12,"nodeType":"113","messageId":"114","endLine":15,"endColumn":22},{"ruleId":"111","severity":1,"message":"135","line":15,"column":24,"nodeType":"113","messageId":"114","endLine":15,"endColumn":37},{"ruleId":"111","severity":1,"message":"129","line":16,"column":12,"nodeType":"113","messageId":"114","endLine":16,"endColumn":20},{"ruleId":"111","severity":1,"message":"130","line":16,"column":22,"nodeType":"113","messageId":"114","endLine":16,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":27,"column":8,"nodeType":"138","endLine":27,"endColumn":10,"suggestions":"139"},{"ruleId":"111","severity":1,"message":"140","line":62,"column":7,"nodeType":"113","messageId":"114","endLine":62,"endColumn":22},{"ruleId":"111","severity":1,"message":"141","line":63,"column":7,"nodeType":"113","messageId":"114","endLine":63,"endColumn":18},{"ruleId":"111","severity":1,"message":"122","line":64,"column":7,"nodeType":"113","messageId":"114","endLine":64,"endColumn":13},{"ruleId":"111","severity":1,"message":"123","line":65,"column":7,"nodeType":"113","messageId":"114","endLine":65,"endColumn":13},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'tw' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'Select' is assigned a value but never used.","'Option' is assigned a value but never used.","'uuidv4' is defined but never used.","'Productid' is assigned a value but never used.","'setProductid' is assigned a value but never used.","'addNewCustomer' is defined but never used.","'path' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'getProducts' is defined but never used.","'getCategories' is defined but never used.","'history' is assigned a value but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProds'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'SelectContainer' is assigned a value but never used.","'SelectTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [getProds]",{"range":"147","text":"148"},[833,835],"[getProds]"]